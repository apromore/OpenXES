plugins {
	// Apply the java-library plugin for API and implementation separation.
	id 'java-library'
	id 'maven-publish'
	id 'net.researchgate.release' version '3.0.2'
	id "io.freefair.lombok" version "6.6-rc1"
}

group = 'org.apromore'
description = 'OpenXES'
sourceCompatibility = '11'

repositories {
	// Use Maven Central for resolving dependencies.
	mavenCentral()

	maven {
		url = uri('https://raw.github.com/apromore/ApromoreCore_SupportLibs/master/mvn-repo/')
	}

}

dependencies {
	api 'org.eclipse.collections:eclipse-collections:10.4.0'
	implementation 'com.thoughtworks.xstream:xstream:1.4.19'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	implementation 'org.deckfour:spex:1.0'
	implementation 'com.esotericsoftware:kryo:4.0.2'
	implementation 'com.google.guava:guava:30.1.1-jre'
	implementation 'org.springframework.boot:spring-boot-starter-logging:2.6.6'
}

tasks.named('jar') {
	manifest {
		attributes('Implementation-Title': project.name,
				'Implementation-Version': project.version)
	}
}

publishing {
	publications {
		maven(MavenPublication) {
			from components.java
		}
	}

	repositories {
		maven {
			name = 'apromoreRepo'
			credentials(PasswordCredentials) {
				username System.properties['APROMORE_DEV_USERNAME'] ?: System.env['APROMORE_DEV_USERNAME']
				password System.properties['APROMORE_DEV_PASSWORD'] ?: System.env['APROMORE_DEV_PASSWORD']
			}
			def releasesRepoUrl = 'https://nexus.apromore.org/repository/apromore-proprietary-deps/'
			def snapshotsRepoUrl = 'https://nexus.apromore.org/repository/apromore-proprietary-snapshot-deps/'
			url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
		}
	}
}

release {
	failOnCommitNeeded = false
	failOnUnversionedFiles = false
	failOnSnapshotDependencies = true

	scmAdapters = [
			net.researchgate.release.GitAdapter
	]

	git {
		requireBranch.set('main')
		pushToRemote.set('origin')
		pushToBranchPrefix.set('')
		commitVersionFileOnly.set(false)
		signTag.set(false)
	}
}

//hooks provided: beforeReleaseBuild which runs before build and
// afterReleaseBuild which runs afterwards
publishMavenPublicationToApromoreRepoRepository.dependsOn clean
afterReleaseBuild.dependsOn publishMavenPublicationToApromoreRepoRepository
